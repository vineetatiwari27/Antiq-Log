{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\vinee\\\\vsfiles\\\\Comfy Sloth\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nexport var formatPrice = function formatPrice(number) {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(number / 100);\n};\nexport var getUniqueValues = function getUniqueValues(data, type) {\n  var unique = data.map(function (item) {\n    return item[type];\n  });\n\n  if (type === 'colors') {\n    unique = unique.flat();\n  }\n\n  return ['all'].concat(_toConsumableArray(new Set(unique)));\n};","map":{"version":3,"names":["formatPrice","number","Intl","NumberFormat","style","currency","format","getUniqueValues","data","type","unique","map","item","flat","Set"],"sources":["C:/Users/vinee/vsfiles/Comfy Sloth/src/utils/helpers.js"],"sourcesContent":["export const formatPrice = (number) => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(number / 100)\r\n}\r\n\r\nexport const getUniqueValues = (data, type) => {\r\n  let unique = data.map((item) => item[type])\r\n  if (type === 'colors') {\r\n    unique = unique.flat()\r\n  }\r\n\r\n  return ['all', ...new Set(unique)]\r\n}\r\n"],"mappings":";AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;EACrC,OAAO,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;IACpCC,KAAK,EAAE,UAD6B;IAEpCC,QAAQ,EAAE;EAF0B,CAA/B,EAGJC,MAHI,CAGGL,MAAM,GAAG,GAHZ,CAAP;AAID,CALM;AAOP,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,IAAP,EAAgB;EAC7C,IAAIC,MAAM,GAAGF,IAAI,CAACG,GAAL,CAAS,UAACC,IAAD;IAAA,OAAUA,IAAI,CAACH,IAAD,CAAd;EAAA,CAAT,CAAb;;EACA,IAAIA,IAAI,KAAK,QAAb,EAAuB;IACrBC,MAAM,GAAGA,MAAM,CAACG,IAAP,EAAT;EACD;;EAED,QAAQ,KAAR,4BAAkB,IAAIC,GAAJ,CAAQJ,MAAR,CAAlB;AACD,CAPM"},"metadata":{},"sourceType":"module"}